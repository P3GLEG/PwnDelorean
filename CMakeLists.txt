project(pwndelorean)
cmake_minimum_required(VERSION 3.1)
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
find_package(PkgConfig REQUIRED)
find_package(OpenSSL REQUIRED)
set(LIBGIT_DIR ${CMAKE_SOURCE_DIR}/libgit2)
set(SRC_DIR ${CMAKE_SOURCE_DIR}/src)
find_library(${LIBGIT_DIR} libgit2)
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
    message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

OPTION (BUILD_SHARED_LIBS "Build Shared Library (OFF for Static)" OFF)
OPTION (BUILD_TESTS "Build Tests" ON)

# Compile and link LIBGIT2
INCLUDE_DIRECTORIES(${LIBGIT2_INCLUDE_DIRS})
ADD_EXECUTABLE(pwndelorean ${SRC_DIR}/main.cpp)
TARGET_LINK_LIBRARIES(pwndelorean  ${OPENSSL_LIBRARIES}  Threads::Threads  ${LIBGIT_DIR}/build/libgit2.a ssh2 z http_parser)
